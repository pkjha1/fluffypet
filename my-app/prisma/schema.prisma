generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  pets      Pet[]
  bookings  Booking[]
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pet {
  id          Int      @id @default(autoincrement())
  name        String
  type        String
  breed       String?
  age         Int
  medicalInfo String?
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     String
  bookings    Booking[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ServiceProvider {
  id       Int       @id @default(autoincrement())
  name     String
  type     String
  location String
  bookings Booking[]
  reviews  Review[]
}

model Veterinarian {
  id       Int       @id @default(autoincrement())
  name     String
  specialty String
  location String
  bookings Booking[]
  reviews  Review[]
}

model Booking {
  id                Int              @id @default(autoincrement())
  user              User             @relation(fields: [userId], references: [id])
  userId            String
  pet               Pet              @relation(fields: [petId], references: [id])
  petId             Int
  serviceProvider   ServiceProvider? @relation(fields: [serviceProviderId], references: [id])
  serviceProviderId Int?
  veterinarian      Veterinarian?    @relation(fields: [veterinarianId], references: [id])
  veterinarianId    Int?
  date              DateTime
  status            String
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model Review {
  id                Int              @id @default(autoincrement())
  rating            Int
  comment           String?
  user              User             @relation(fields: [userId], references: [id])
  userId            String
  serviceProvider   ServiceProvider? @relation(fields: [serviceProviderId], references: [id])
  serviceProviderId Int?
  veterinarian      Veterinarian?    @relation(fields: [veterinarianId], references: [id])
  veterinarianId    Int?
  createdAt         DateTime         @default(now())
}

model Place {
  id       Int      @id @default(autoincrement())
  name     String
  type     String
  location String
  reviews  Review[]
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  author    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VolunteerApplication {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String
  experience String
  status    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

